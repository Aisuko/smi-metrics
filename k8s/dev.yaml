---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: smi-metrics
  name: smi-metrics
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: smi-metrics
  name: smi-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: smi-metrics
  namespace: default
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  labels:
    app: smi-metrics
  name: v1alpha1.metrics.smi-spec.io
spec:
  service:
    name: smi-metrics
    namespace: default
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJhRENDQVEyZ0F3SUJBZ0lRSDNvM2prazNBa0hiN1d0b29xaytoakFLQmdncWhrak9QUVFEQWpBU01SQXcKRGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNU1EVXdNekl5TXpRek1Gb1hEVEk1TURRek1ESXlNelF6TUZvdwpFakVRTUE0R0ExVUVBeE1IY205dmRDMWpZVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQktNCmZhd1hBT2tuK1FHQVVUbzVVenhEd1dObFRpMWFBMzlrMTk1ek9pbG9hVEZ3NEZoRCtHVnhwbzdVSkZMT0lEYTgKQ0plcnBQMGdaZlowSUxLb0FVV2pSVEJETUE0R0ExVWREd0VCL3dRRUF3SUJCakFTQmdOVkhSTUJBZjhFQ0RBRwpBUUgvQWdFQk1CMEdBMVVkRGdRV0JCUkx0UTlybkViYko2Z05Peko1M1c2NXpKWXExREFLQmdncWhrak9QUVFECkFnTkpBREJHQWlFQWdna3pxQk1HbG5naElGaTVieTBDRVl3RXFqMk9zUjJyVGlLQmh5dWxkT29DSVFDUUlkR1YKVzRNOE5kQTUxdnBPbko4NWRIZzVJelMvb3ZaZ0J3QkVYOEJZNmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  group: metrics.smi-spec.io
  version: v1alpha1
  insecureSkipTLSVerify: false
  groupPriorityMinimum: 100
  versionPriority: 100
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: smi-metrics
  name: smi-metrics
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: api
  selector:
    app: smi-metrics
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: smi-metrics
data:
  config.yml: |
    log-level: debug
    prometheus-url: http://linkerd-prometheus.linkerd.svc.cluster.local:9090
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: smi-metrics
  name: smi-metrics
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJvakNDQVVtZ0F3SUJBZ0lRY0FvUURyU0lxYy81dWl0WGg0QW5MVEFLQmdncWhrak9QUVFEQWpBU01SQXcKRGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNU1EVXdNekl5TXpRME9Gb1hEVE01TURReU9ESXlNelEwTjFvdwpJakVnTUI0R0ExVUVBeE1YYzIxcExXMWxkSEpwWTNNdVpHVm1ZWFZzZEM1emRtTXdXVEFUQmdjcWhrak9QUUlCCkJnZ3Foa2pPUFFNQkJ3TkNBQVNuWjlrYjlnVnJEK3p2ajJaZFJ6bWNJRjRqWWRnTWlzcGZnV0RkaUlmU0hXRCsKR3hmRUVzbE5pV0c3V0xGSGV3QWI0T04xNHB4SDNRb0Z3bWdjbTFsdm8zRXdiekFPQmdOVkhROEJBZjhFQkFNQwpCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01CMEdBMVVkRGdRV0JCUjhJV21uCmduMFZEaXlpSm9zTXlEOTdLamNGSURBZkJnTlZIU01FR0RBV2dCUkx0UTlybkViYko2Z05Peko1M1c2NXpKWXEKMURBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCODJFRGJnaVNtM28rdlp1U2E3WnBVQ29YR0FBRXFsZDU1dzZWdQpZMzdwN1FJZ2Z4RmplQXhZNlVlSlREdGhCZHVJSUpIMHErMUJyZWdXRGJESmlWRFEyTzg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUwyYlBzK3AzWjFnT2pPZU9QcllTOTRQVmlwUWlGTEFiRC9oVVJwdWtXN0VvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFcDJmWkcvWUZhdy9zNzQ5bVhVYzVuQ0JlSTJIWURJcktYNEZnM1lpSDBoMWcvaHNYeEJMSgpUWWxodTFpeFIzc0FHK0RqZGVLY1I5MEtCY0pvSEp0WmJ3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smi-metrics
  labels:
    app: smi-metrics
spec:
  selector:
    matchLabels:
      app: smi-metrics
  template:
    metadata:
      labels:
        app: smi-metrics
    spec:
      containers:
        - name: smi-metrics
          image: thomasr/smi-metrics
          ports:
            - containerPort: 8080
              name: api
              protocol: TCP
            - containerPort: 8081
              name: admin
              protocol: TCP
          command:
            - /smi-metrics
            - --config=/config.yml
          volumeMounts:
            - name: config
              mountPath: /config.yml
              subPath: config.yml
            - mountPath: /var/run/smi-metrics
              name: tls
              readOnly: true
          # livenessProbe:
          #   httpGet:
          #     path: /status
          #     port: 8081
          # readinessProbe:
          #   httpGet:
          #     path: /status
          #     port: 8081
      volumes:
        - name: config
          configMap:
            name: smi-metrics
        - name: tls
          secret:
            secretName: smi-metrics
---
